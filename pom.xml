<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.scijava</groupId>
		<artifactId>pom-scijava</artifactId>
		<version>35.1.1</version>
		<relativePath />
	</parent>

	<groupId>net.imagej</groupId>
	<artifactId>imagej</artifactId>
	<version>2.13.1</version>

	<name>ImageJ2</name>
	<description>ImageJ2 is a rewrite of ImageJ for multidimensional image data, with a focus on scientific imaging.</description>
	<url>https://imagej.net/</url>
	<inceptionYear>2009</inceptionYear>
	<organization>
		<name>ImageJ</name>
		<url>https://imagej.net/</url>
	</organization>
	<licenses>
		<license>
			<name>Simplified BSD License</name>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>ctrueden</id>
			<name>Curtis Rueden</name>
			<url>https://imagej.net/people/ctrueden</url>
			<roles>
				<role>founder</role>
				<role>lead</role>
				<role>developer</role>
				<role>debugger</role>
				<role>reviewer</role>
				<role>support</role>
				<role>maintainer</role>
			</roles>
		</developer>
		<developer>
			<id>hinerm</id>
			<name>Mark Hiner</name>
			<url>https://imagej.net/people/hinerm</url>
			<roles>
				<role>developer</role>
				<role>debugger</role>
				<role>reviewer</role>
				<role>support</role>
				<role>maintainer</role>
			</roles>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Johannes Schindelin</name>
			<url>https://imagej.net/people/dscho</url>
			<properties><id>dscho</id></properties>
		</contributor>
		<contributor>
			<name>Barry DeZonia</name>
			<url>https://imagej.net/people/bdezonia</url>
			<properties><id>bdezonia</id></properties>
			<roles><role>founder</role></roles>
		</contributor>
		<contributor>
			<name>Grant Harris</name>
			<url>https://imagej.net/people/tnargsirrah</url>
			<properties><id>tnargsirrah</id></properties>
			<roles><role>founder</role></roles>
		</contributor>
		<contributor>
			<name>Matthias Arzt</name>
			<url>https://imagej.net/people/maarzt</url>
			<properties><id>maarzt</id></properties>
		</contributor>
		<contributor>
			<name>Tim-Oliver Buchholz</name>
			<url>https://imagej.net/people/tibuch</url>
			<properties><id>tibuch</id></properties>
		</contributor>
		<contributor>
			<name>Albert Cardona</name>
			<url>https://imagej.net/people/acardona</url>
			<properties><id>acardona</id></properties>
		</contributor>
		<contributor>
			<name>Christian Dietz</name>
			<url>https://imagej.net/people/dietzc</url>
			<properties><id>dietzc</id></properties>
		</contributor>
		<contributor>
			<name>Ellen TA Dobson</name>
			<url>https://imagej.net/people/etadobson</url>
			<properties><id>etadobson</id></properties>
		</contributor>
		<contributor>
			<name>Richard Domander</name>
			<url>https://imagej.net/people/rimadoma</url>
			<properties><id>rimadoma</id></properties>
		</contributor>
		<contributor>
			<name>Jan Eglinger</name>
			<url>https://imagej.net/people/imagejan</url>
			<properties><id>imagejan</id></properties>
		</contributor>
		<contributor>
			<name>Niko Ehrenfeuchter</name>
			<url>https://imagej.net/people/ehrenfeu</url>
			<properties><id>ehrenfeu</id></properties>
		</contributor>
		<contributor>
			<name>Gabriel Einsdorf</name>
			<url>https://imagej.net/people/gab1one</url>
			<properties><id>gab1one</id></properties>
		</contributor>
		<contributor>
			<name>Tiago Ferreira</name>
			<url>https://imagej.net/people/tferr</url>
			<properties><id>tferr</id></properties>
		</contributor>
		<contributor>
			<name>Henrik Grimler</name>
			<properties><id>Grimler91</id></properties>
		</contributor>
		<contributor>
			<name>Aivar Grislis</name>
			<url>https://imagej.net/people/grislis</url>
			<properties><id>grislis</id></properties>
		</contributor>
		<contributor>
			<name>Robert Haase</name>
			<url>https://imagej.net/people/haesleinhuepf</url>
			<properties><id>haesleinhuepf</id></properties>
		</contributor>
		<contributor>
			<name>Kyle Harrington</name>
			<url>https://imagej.net/people/kephale</url>
			<properties><id>kephale</id></properties>
		</contributor>
		<contributor>
			<name>Stefan Helfrich</name>
			<url>https://imagej.net/people/stelfrich</url>
			<properties><id>stelfrich</id></properties>
		</contributor>
		<contributor>
			<name>Martin Horn</name>
			<url>https://imagej.net/people/hornm</url>
			<properties><id>hornm</id></properties>
		</contributor>
		<contributor>
			<name>Florian Jug</name>
			<url>https://imagej.net/people/fjug</url>
			<properties><id>fjug</id></properties>
		</contributor>
		<contributor>
			<name>Lee Kamentsky</name>
			<url>https://imagej.net/people/LeeKamentsky</url>
			<properties><id>LeeKamentsky</id></properties>
		</contributor>
		<contributor>
			<name>Rick Lentz</name>
			<url>https://imagej.net/people/ricklentz</url>
			<properties><id>ricklentz</id></properties>
		</contributor>
		<contributor>
			<name>Mark Longair</name>
			<url>https://imagej.net/people/mhl</url>
			<properties><id>mhl</id></properties>
		</contributor>
		<contributor>
			<name>Hadrien Mary</name>
			<url>https://imagej.net/people/hadim</url>
			<properties><id>hadim</id></properties>
		</contributor>
		<contributor>
			<name>Matt McCormick</name>
			<url>https://imagej.net/people/thewtex</url>
			<properties><id>thewtex</id></properties>
		</contributor>
		<contributor>
			<name>Cyril Mongis</name>
			<url>https://imagej.net/people/cmongis</url>
			<properties><id>cmongis</id></properties>
		</contributor>
		<contributor>
			<name>Josh Moore</name>
			<url>https://imagej.net/joshmoore</url>
			<properties><id>joshmoore</id></properties>
		</contributor>
		<contributor>
			<name>Benjamin Nanes</name>
			<url>https://imagej.net/bnanes</url>
			<properties><id>bnanes</id></properties>
		</contributor>
		<contributor>
			<name>Brian Northan</name>
			<url>https://imagej.net/people/bnorthan</url>
			<properties><id>bnorthan</id></properties>
		</contributor>
		<contributor>
			<name>Tobias Pietzsch</name>
			<url>https://imagej.net/people/tpietzsch</url>
			<properties><id>tpietzsch</id></properties>
		</contributor>
		<contributor>
			<name>David Pinto</name>
			<url>https://imagej.net/people/carandraug</url>
			<properties><id>carandraug</id></properties>
		</contributor>
		<contributor>
			<name>Stephan Preibisch</name>
			<url>https://imagej.net/people/StephanPreibisch</url>
			<properties><id>StephanPreibisch</id></properties>
		</contributor>
		<contributor>
			<name>Wayne Rasband</name>
			<url>https://imagej.net/people/rasband</url>
			<properties><id>rasband</id></properties>
		</contributor>
		<contributor>
			<name>Stephan Saalfeld</name>
			<url>https://imagej.net/people/axtimwalde</url>
			<properties><id>axtimwalde</id></properties>
		</contributor>
		<contributor>
			<name>Deborah Schmidt</name>
			<url>https://imagej.net/frauzufall</url>
			<properties><id>frauzufall</id></properties>
		</contributor>
		<contributor>
			<name>Jean-Yves Tinevez</name>
			<url>https://imagej.net/people/tinevez</url>
			<properties><id>tinevez</id></properties>
		</contributor>
		<contributor>
			<name>Gabriella Turek</name>
			<url>https://imagej.net/people/turekg</url>
			<properties><id>turekg</id></properties>
		</contributor>
		<contributor>
			<name>Alison Walter</name>
			<url>https://imagej.net/people/awalter17</url>
			<properties><id>awalter17</id></properties>
		</contributor>
		<contributor>
			<name>Benjamin Wilhelm</name>
			<url>https://imagej.net/people/HedgehogCode</url>
			<properties><id>HedgehogCode</id></properties>
		</contributor>
		<contributor>
			<name>Leon Yang</name>
			<url>https://imagej.net/people/lnyng</url>
			<properties><id>lnyng</id></properties>
		</contributor>
	</contributors>

	<mailingLists>
		<mailingList>
			<name>Image.sc Forum</name>
			<archive>https://forum.image.sc/tag/imagej</archive>
		</mailingList>
	</mailingLists>

	<scm>
		<connection>scm:git:https://github.com/imagej/imagej2</connection>
		<developerConnection>scm:git:git@github.com:imagej/imagej2</developerConnection>
		<tag>imagej-2.13.1</tag>
		<url>https://github.com/imagej/imagej2</url>
	</scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/imagej/imagej2/issues</url>
	</issueManagement>
	<ciManagement>
		<system>GitHub Actions</system>
		<url>https://github.com/imagej/imagej2/actions</url>
	</ciManagement>

	<properties>
		<main-class>net.imagej.Main</main-class>
		<package-name>net.imagej</package-name>

		<license.licenseName>bsd_2</license.licenseName>
		<license.copyrightOwners>ImageJ2 developers.</license.copyrightOwners>
		<license.projectName>ImageJ2 software for multidimensional image processing and analysis.</license.projectName>

		<!-- NB: Deploy releases to the SciJava Maven repository. -->
		<releaseProfiles>sign,deploy-to-scijava</releaseProfiles>
	</properties>

	<dependencies>
		<!-- ImageJ2 dependencies -->
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-common</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-launcher</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-notebook</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-ops</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-updater</artifactId>
		</dependency>

		<!-- SCIFIO dependencies -->
		<dependency>
			<groupId>io.scif</groupId>
			<artifactId>scifio</artifactId>
		</dependency>

		<!-- SciJava dependencies -->
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-common</artifactId>
		</dependency>

		<!-- Runtime ImageJ2 dependencies -->
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-legacy</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-mesh-io</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-plugins-batch</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-deprecated</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-plugins-commands</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-plugins-tools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-plugins-uploader-ssh</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-plugins-uploader-webdav</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-scripting</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-ui-swing</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Runtime SciJava dependencies -->
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-io-http</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-plugins-commands</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-plugins-platforms</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-plugins-text-markdown</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-plugins-text-plain</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>script-editor</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Optional runtime dependencies -->
		<!--
		NB: scijava-config provides application configuration (e.g. logging) that
		should not be propagated to downstream components depending on ImageJ2.
		-->
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>scijava-config</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Test scope dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>scijava.public</id>
			<url>https://maven.scijava.org/content/groups/public</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
				<artifactId>maven-java-formatter-plugin</artifactId>
				<version>0.3.1</version>
				<configuration>
					<configFile>${basedir}/config/eclipse-code-formatter-profile.xml</configFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.fusesource.mvnplugins</groupId>
				<artifactId>maven-graph-plugin</artifactId>
				<configuration>
					<hideTransitive>false</hideTransitive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!--
		The alt-ui profile adds alternative user interfaces to the
		runtime classpath if the scijava.ui system property is set.
		This enables launching ImageJ2 with an alternative UI; see:
		https://imagej.net/develop/command-line
		-->
		<profile>
			<id>alt-ui</id>
			<activation>
				<property>
					<name>scijava.ui</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-ui-awt</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>-Dscijava.ui=${scijava.ui}</argument>
								<argument>${main-class}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
		The swing profile includes the ImageJ2 Swing UI.
		It is always included unless java.awt.headless is set.
		-->
		<profile>
			<id>swing</id>
			<activation>
				<property>
					<name>!java.awt.headless</name>
				</property>
			</activation>
			<dependencies>
			</dependencies>
		</profile>

		<!--
		The app profile builds the imagej2-x.y.z-application.zip bundle,
		which is the downloadable ZIP archive of the ImageJ2 application.
		-->
		<profile>
			<id>app</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/zip.xml</descriptor>
							</descriptors>
							<finalName>imagej2-${project.version}</finalName>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>imagej-launcher</artifactId>
											<version>${imagej-launcher.version}</version>
											<classifier>linux64</classifier>
											<type>exe</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
											<destFileName>imagej-launcher-linux64</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>imagej-launcher</artifactId>
											<version>${imagej-launcher.version}</version>
											<classifier>win32</classifier>
											<type>exe</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
											<destFileName>imagej-launcher-win32.exe</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>imagej-launcher</artifactId>
											<version>${imagej-launcher.version}</version>
											<classifier>win64</classifier>
											<type>exe</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
											<destFileName>imagej-launcher-win64.exe</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>imagej-launcher</artifactId>
											<version>${imagej-launcher.version}</version>
											<classifier>macosx</classifier>
											<type>exe</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
											<destFileName>imagej-launcher-macosx</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
		The deps profile builds the imagej-x.y.z-all uber-jar, which is a bundle of
		ImageJ2 with all dependencies and sources. While we do not encourage
		its use, it can simplify deployment in some environments; see:
		https://imagej.net/learn/faq#how-can-i-call-imagej-from-my-software
		-->
		<profile>
			<id>deps</id>
			<!--
			NB: Include source code for all parts of ImageJ.
			This list of dependencies needs to remain in sync with the
			main list of dependencies outside the profiles section,
			but with <classifier>sources</classifier> for each.
			-->
			<dependencies>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej</artifactId>
					<version>${project.version}</version>
					<classifier>sources</classifier>
				</dependency>

				<!-- ImageJ2 dependencies -->
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-common</artifactId>
					<version>${imagej-common.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-legacy</artifactId>
					<version>${imagej-legacy.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-ops</artifactId>
					<version>${imagej-ops.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-updater</artifactId>
					<version>${imagej-updater.version}</version>
					<classifier>sources</classifier>
				</dependency>

				<!-- SciJava dependencies -->
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scijava-common</artifactId>
					<version>${scijava-common.version}</version>
					<classifier>sources</classifier>
				</dependency>

				<!-- Runtime ImageJ2 dependencies -->
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-plugins-commands</artifactId>
					<version>${imagej-plugins-commands.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-plugins-tools</artifactId>
					<version>${imagej-plugins-tools.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-plugins-uploader-ssh</artifactId>
					<version>${imagej-plugins-uploader-ssh.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-plugins-uploader-webdav</artifactId>
					<version>${imagej-plugins-uploader-webdav.version}</version>
					<classifier>sources</classifier>
				</dependency>

				<!-- Runtime SciJava dependencies -->
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scijava-plugins-platforms</artifactId>
					<version>${scijava-plugins-platforms.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scijava-plugins-text-markdown</artifactId>
					<version>${scijava-plugins-text-markdown.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scijava-plugins-text-plain</artifactId>
					<version>${scijava-plugins-text-plain.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scripting-beanshell</artifactId>
					<version>${scripting-beanshell.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scripting-clojure</artifactId>
					<version>${scripting-clojure.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scripting-java</artifactId>
					<version>${scripting-java.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scripting-javascript</artifactId>
					<version>${scripting-javascript.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scripting-jruby</artifactId>
					<version>${scripting-jruby.version}</version>
					<classifier>sources</classifier>
				</dependency>
				<dependency>
					<groupId>org.scijava</groupId>
					<artifactId>scripting-jython</artifactId>
					<version>${scripting-jython.version}</version>
					<classifier>sources</classifier>
				</dependency>

				<dependency>
					<groupId>net.imagej</groupId>
					<artifactId>imagej-ui-swing</artifactId>
					<version>${imagej-ui-swing.version}</version>
					<classifier>sources</classifier>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<mainClass>org.scijava.util.MetaInfCombiner</mainClass>
							<arguments>
								<argument>${basedir}/target/assembly/all/</argument>
							</arguments>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>java</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/all.xml</descriptor>
							</descriptors>
							<finalName>imagej-${project.version}</finalName>
							<archive>
								<manifest>
									<mainClass>${main-class}</mainClass>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-enforcer-plugin</artifactId>
						<configuration>
							<rules>
								<requireReleaseDeps>
									<excludes>
										<exclude>${project.groupId}:${project.artifactId}</exclude>
									</excludes>
								</requireReleaseDeps>

							</rules>

							<!--
							Unfortunately, we cannot configure banCircularDependencies
							to handle the -sources "circular dependency" correctly. In
							other words, the following does not work:

								<banCircularDependencies>
									<excludes>
										<exclude>${project.groupId}:${project.artifactId}</exclude>
									</excludes>
								</banCircularDependencies>

							Therefore, we have to force the maven-enforcer-plugin *not*
							to fail, even if a rule failed.
							-->
							<fail>false</fail>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>populate-app</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/dir.xml</descriptor>
							</descriptors>
							<finalName>ImageJ2.app</finalName>
							<outputDirectory>${basedir}</outputDirectory>
							<appendAssemblyId>false</appendAssemblyId>
							<attach>false</attach>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>only-eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!--
						This plugin's configuration is used to store Eclipse m2e settings
						only. It has no influence on the Maven build itself.
						-->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId />
												<artifactId />
												<versionRange>${project.version}</versionRange>
												<goals>
													<goal />
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[2.0,)</versionRange>
												<goals>
													<goal>copy</goal>
													<goal>unpack</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
